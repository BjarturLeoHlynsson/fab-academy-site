{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"about-me/agreement/","title":"Fab Academy Student Agreement","text":"<p>The Fab Academy is responsible for:</p> <ul> <li>Teaching principles and practices of digital fabrication</li> <li>Arranging lectures, recitations, meetings, and events for the class</li> <li>Evaluating and providing feedback on student work</li> <li>Offering clear standards for completing assignments</li> <li>Certifying and archiving student progress</li> <li>Supervising class preparation</li> <li>Reviewing prospective students, instructors, and labs</li> <li>Providing central staff and infrastructure for students, instructors, and labs</li> <li>Fund-raising for costs not covered by student tuition</li> <li>Managing and reporting on the program's finances, results, and impacts</li> <li>Publicizing the program</li> <li>Promoting a respectful environment free of harassment and discrimination</li> <li>Encourage a diverse, accessible, and equitable community</li> </ul> <p>I am a Fab Academy student, responsible for:</p> <ul> <li>Attending class lectures and participating in reviews</li> <li>Developing and documenting projects assigned to introduce and demonstrate skills</li> <li>Allowing the Fab Academy to share my work (with attribution) in the class for purposes compatible with its mission</li> <li>Honestly reporting on my work, and appropriately attributing the work of others (both human and machine)</li> <li>Working safely</li> <li>Leaving workspaces in the same (or better) condition than I found them</li> <li>Participating in the upkeep of my lab</li> <li>Ensuring that my tuition for local and central class costs is covered</li> <li>Following locally applicable health and safety guidance</li> <li>Promoting a respectful environment free of harassment and discrimination</li> </ul> <p>Signed by committing this file in my repository,</p> <p></p>"},{"location":"pre-fab/overview/","title":"Pre Fab","text":"<p>Before I start, please note that some of the websites I linked to are in Icelandic, so have a translator ready if you want to use the same instructions! All websites in Icelandic will have the icelandic flag in the link.</p> <p>This year, Fab Lab \u00cdsland decided to start Fab Academy a bit early to better prepare students, and  Fab Lab \u00cdsafj\u00f6r\u00f0ur decided to host it. My instructor for Pre-Fab is Svavar Konr\u00e1\u00f0sson and my Lab instructor is  Frosti G\u00edslason, his Fab Academy site could not be found so here is the Lab Website for Fab Academy 2024</p> <p>More information on this initiative be found on the  Fab Isa Site.  </p>"},{"location":"pre-fab/week01/","title":"Website Making","text":""},{"location":"pre-fab/week01/#assignment","title":"Assignment","text":"<ul> <li>Set up a documentation website using GitHub.</li> <li>Learn to compress all your images and videos</li> </ul> <p>More information can be found on the  Fab Isa Site. </p>"},{"location":"pre-fab/week01/#setting-up-the-website-on-github","title":"Setting Up the Website on GitHub","text":"<p>Instructions and Theme</p> <p>I followed these  instructions provided by my instructor Svavar Konr\u00e1\u00f0sson, which were very helpful in setting up MKDocs. MKDocs is a static site generator that uses Markdown. There are numerous themes available, but I decided to use the Material theme.</p> <p>To get started, I downloaded the following tools:</p> <ul> <li>Visual Studio Code</li> <li>Python</li> <li>Git</li> </ul> <p>VS Code Extensions</p> <p>In VS Code, I recommend installing Python, Markdown Extension Pack, and YAML. YAML requires a bit more setup to work with MKDocs, which you can find instructions for here inside of the note: Recommended: configuration validation and auto-complete.</p> <p>After installing these tools, I created a repository on GitHub to store my project and host the website using GitHub Pages. On my machine, I created a folder named 'Code' on my C: drive. Within the 'Code' folder, I created a subfolder to store the website files during development.</p> <p>After completing the setup, I opened VS Code, navigated to the 'Code' folder, and selected my project folder. Next, I needed to install MkDocs, so I opened the terminal and typed:</p> <pre><code>pip install mkdocs-material\n</code></pre> <p>This command installed all the necessary dependencies. Afterwards, I typed:</p> <pre><code>mkdocs new .\n</code></pre> <p>This command created a folder containing all the required resources for MKDocs, which looked like this:</p> <pre><code>\u251c\u2500 docs/\n\u2502  \u2514\u2500 index.md\n\u2514\u2500 mkdocs.yml\n</code></pre> <p>When all that was done, I went into the <code>mkdocs.yml</code> file and typed:</p> <pre><code>site_name: Bjartur's Fab Academy Journey\n\ntheme:\n  name: material\n</code></pre> <p>This told MKDocs I wanted to use the Material theme. To check everything was successful, I went into the terminal and typed:</p> <pre><code>mkdocs serve\n</code></pre> <p>Then I could open my browser and type localhost:8000. That was a local website that I could use to see how my website looks even when coding!</p> <p>Once I had checked that everything was working, I needed to get the website to GitHub. That was a bit more complicated than I thought, but in the end, it worked. Let's go through how I did that!</p> <p>To get started, I connected VS Code and Git to my GitHub account. To log in with Git, I needed to open up the terminal and type:</p> <pre><code>git config --global user.name \"name\"\ngit config --global user.email \"email@example.com\"\n</code></pre> <p>After connecting GitHub to VS Code and logging in with Git, I could finally send my page to my GitHub repository. This was done by pressing <code>Source Control (Ctrl + Shift + G)</code> on the sidebar, which for me looked a little something like this:</p> <p></p> <p>Then I just pressed initialize repository in VS Code, chose my repository, and then pressed Commit and finally Sync. My code was now on GitHub. Afterwards, I wanted to get a functional website hosted, so I needed to use GitHub Pages. To begin with, I opened up GitHub, logged in, and opened up my repository. Then I was on this page:</p> <p></p> <p>Then I needed to deploy my page using GitHub Pages. To configure Pages, I opened up <code>settings</code>:</p> <p></p> <p>In settings, I opened the <code>Pages</code> tab:</p> <p></p> <p>There I configured GitHub to use the main branch and told it to use the root folder which didn't work so afterwards I changed it to the docs folder which worked. That looked a little something like this:</p> <p></p> <p>Then I pressed <code>save</code> and after around 20 seconds, I reloaded the page and at the top there was a pop-up that looked like this:</p> <p></p> <p>Then I could press <code>Visit Site</code> but when I checked the site it looked like this:</p> <p></p> <p>Which is not correct so I googled why my page looked like that, I was told that I needed to tell GitHub that this is an MKDocs site. To do that, I followed these instructions, which told me I need to make a GitHub \"Action\". To make a GitHub Action, I went to the top bar and opened up Actions:</p> <p>In the Actions tab, I pressed  </p> <p></p> <p>then I pressed:</p> <p></p> <p>Once that was done, I pasted in this code:</p> <pre><code>name: MK-Docs \non:\n  push:\n    branches:\n      - master \n      - main\npermissions:\n  contents: write\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v4\n      - name: Configure Git Credentials\n        run: |\n          git config user.name github-actions[bot]\n          git config user.email 41898282+github-actions[bot]@users.noreply.github.com\n      - uses: actions/setup-python@v5\n        with:\n          python-version: 3.x\n      - run: echo \"cache_id=$(date --utc '+%V')\" &gt;&gt; $GITHUB_ENV \n      - uses: actions/cache@v4\n        with:\n          key: mkdocs-material-${{ env.cache_id }}\n          path: .cache\n          restore-keys: |\n            mkdocs-material-\n      - run: pip install mkdocs-material \n      - run: mkdocs gh-deploy --force\n</code></pre> <p>and named it <code>MK-Docs</code> and then to save it I pressed <code>commit</code>.</p> <p>Then I went back into the <code>settings</code> tab, then <code>pages</code>, and selected gh-pages as my branch and root as my folder so it looked like this:</p> <p></p> <p>and then my page looked like this:</p> <p></p> <p>Success! I now had a page that anyone can access and a place to document my journey!</p>"},{"location":"pre-fab/week01/#configuring-and-personalizing-my-website","title":"Configuring and Personalizing my website","text":"<p>To begin, I opened the <code>mkdocs.yml</code> file and decided to use Svavar Konr\u00e1\u00f0sson's configuration as a base, customizing it to fit my needs. One of the features I added was the ability to switch between light and dark modes using a light bulb icon next to the search bar. Here is the code for that:</p> <pre><code>theme:\n  palette:\n    - media: \"(prefers-color-scheme: light)\"  # Toggle for light mode\n      scheme: default\n      toggle: \n        icon: material/lightbulb\n        name: Switch to dark mode\n      primary: black\n      accent: red\n    - media: \"(prefers-color-scheme: dark)\"   # Toggle for dark mode\n      scheme: slate\n      toggle:\n        icon: material/lightbulb-outline\n        name: Switch to light mode\n      primary: black \n      accent: red \n</code></pre> <p>Next, I changed the font to enhance the readability of the text and code:</p> <pre><code># This code should go inside the theme section\n  font:\n    text: Roboto \n    code: Roboto Mono  \n</code></pre> <p>I also added several useful Markdown extensions to improve the functionality of the site:</p> <pre><code>markdown_extensions:\n  - pymdownx.snippets\n  - pymdownx.keys\n  - pymdownx.highlight:\n      anchor_linenums: true\n  - pymdownx.inlinehilite\n  - pymdownx.superfences\n  - pymdownx.tabbed:\n      alternate_style: true\n  - pymdownx.details\n  - admonition\n  - attr_list\n  - md_in_html\n  - pymdownx.arithmatex:\n      generic: true\n  - pymdownx.tasklist:\n      custom_checkbox: true\n</code></pre> <p>After making these and a few other minor adjustments like changing the icons, I was extremely pleased with the final result!</p>"},{"location":"pre-fab/week01/#compressing-images-and-video","title":"Compressing Images and Video","text":"<p>To get started, I downloaded the following tools:</p> <ul> <li>FFmpeg</li> <li>ImageMagick</li> </ul> <p>Installing FFmpeg</p> <p>There are two ways to install FFmpeg</p> <p>A) Run this command in the terminal on Windows:</p> <pre><code>winget install ffmpeg\n</code></pre> <p>B) Alternatively, you can download the ZIP file from the FFmpeg website linked above.</p> <p>After installation, I discovered that both FFmpeg and ImageMagick operate without a graphical user interface (GUI), and you must use the terminal to interact with them.</p>"},{"location":"pre-fab/week01/#imagemagick","title":"ImageMagick","text":"<p>To batch convert images, I opened the image folder in the terminal by typing CMD in the search box. Then, I used the following command to resize and compress all PNG images:</p> <pre><code>magick mogrify -resize 1000 -quality 80 -format jpg *.png\n</code></pre> <p>To convert a single image, I used this command:</p> <pre><code>magick IMAGE-NAME.png -resize 1000 -quality 80 output_image.jpg\n</code></pre> <p>Warning</p> <p>If ImageMagick is not working, check if you are using the right command by replacing <code>convert</code> with <code>magick</code> if you are using either Linux or MacOS</p>"},{"location":"pre-fab/week01/#ffmpeg","title":"FFmpeg","text":"<p>Similarly, I optimized videos by navigating to the video folder and typing CMD to open the terminal. I then ran the following command, which can be found on Svavar's Site:</p> <pre><code>ffmpeg -i input_video.mov -vcodec libx264 -crf 25 -preset veryslow -movflags +faststart -vf scale=-2:360 -c:a aac -b:a 128k output_video.mp4\n</code></pre>"},{"location":"pre-fab/week01/#last-words","title":"Last Words","text":"<p>This week was very interesting. I learned about how to use Git and GitHub and MKDocs Material which I am loving as a website maker. This week thought me a lot and i am very happy with my website.</p>"},{"location":"pre-fab/week01/#design-files","title":"Design Files","text":"<ul> <li>None</li> </ul>"},{"location":"pre-fab/week01/#important-links","title":"Important Links","text":"<ul> <li>GitHub Pages</li> </ul>"},{"location":"pre-fab/week01/#software-i-used","title":"Software I used","text":"<ul> <li>Material for MkDocs</li> <li>Visual Studio Code</li> <li>Python</li> <li>ImageMagick</li> <li>FFmpeg</li> </ul>"},{"location":"pre-fab/week02/","title":"Electronics Design and Production","text":""},{"location":"pre-fab/week02/#assignment","title":"Assignment","text":"<ul> <li>Use KiCad to design a development board to interact and communicate with an embedded microcontroller.</li> <li>Make and test the development board you designed.</li> </ul> <p>More information can be found on the  Fab Isa Site.</p>"},{"location":"pre-fab/week02/#installing-kicad","title":"Installing KiCad","text":"<p>To get started, I downloaded the following tools:</p> <ul> <li>KiCad</li> <li>Fab Electronics Library</li> <li>Inkscape</li> </ul> <p>Installing Fab Electronics Library in KiCad</p> <p>On the GitLab repo, there are installation instructions:</p> <ul> <li>Clone or download the Fab Electronics Library and rename it to fab.</li> <li>Store it in a safe place such as ~/kicad/libraries or C:/kicad/libraries.</li> <li>Run KiCad or open a KiCad .pro file.</li> <li>Go to \"Preferences / Manage Symbol Libraries\" and add fab.kicad_sym as a symbol library.</li> <li>Go to \"Preferences / Manage Footprint Libraries\" and add fab.pretty as a footprint library.</li> </ul> <p>We were instructed to watch a YouTube series from Fab Lab Reykjav\u00edk, which is linked  here.</p> <p>After installing these tools, I started by creating a project folder. Then, I opened KiCad, made a project, and opened the Schematic Editor.</p>"},{"location":"pre-fab/week02/#the-schematic-editor","title":"The Schematic Editor","text":"<p>I began by adding the following components:</p> <ul> <li>ATtiny 412</li> <li>Switch_Tactile_Omron</li> <li>C_1206</li> <li>L_1206</li> <li>Conn_PinHeader_1x03</li> </ul> <p>After adding the components, I connected all of them together and labeled everything. Then, I changed the paper to A5 and labeled it. Finally, I had something that looked like this:</p> <p></p>"},{"location":"pre-fab/week02/#the-pcb-editor","title":"The PCB Editor","text":"<p>(Needs images)</p> <p>Next, I opened the PCB Editor and synced my schematic to the editor by pressing this button:</p> <p></p> <p>Then, I arranged the components and started connecting them together following the labels I had made in the Schematic Editor. So I had this:</p> <p></p> <p>To finish, I placed a square outline to tell the computer how large the board was supposed to be. Then, I had this which I could use to make the board.</p> <p></p> <p>Lastly, as a secondary task, I opened the 3D viewer and assigned all the components 3D models so I could use that as a reference to model a case or something similar in FreeCAD.</p> <p></p>"},{"location":"pre-fab/week02/#exporting-and-inkscape","title":"Exporting and Inkscape","text":"<p>Next, I had to export my KiCad board so I could mill it using the circuit mill. I went into export and selected F_CU and exported it as an SVG. Then I did it again but now I only selected Edge_Cuts. Now I had two SVG files that looked like this:</p> <p> </p> <p>The second image does include a line around the edge but it is only visible in light mode. Next, I opened up Inkscape and inverted the colors so white was black and black was white. Now I could export it again and I was ready to mill!</p>"},{"location":"pre-fab/week02/#milling","title":"Milling","text":""},{"location":"pre-fab/week03/","title":"Computer-Controlled Machining","text":""},{"location":"pre-fab/week03/#assignment","title":"Assignment","text":"<ul> <li>Use the Shopbot to design and carve a project</li> </ul> <p>More information can be found on the  Fab Isa Site.</p>"}]}